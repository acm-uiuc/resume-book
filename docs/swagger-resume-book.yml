openapi: 3.0.3
info:
  title: ACM UIUC Resume Book APi
  version: "1.0.0"
  contact:
    name: ACM Infrastructure Team
    email: infra@acm.illinois.edu

servers:
  - url: 
      Fn::FindInMap:
        - ApiGwConfig
        - Ref: RunEnvironment
        - ApiDomainName
    name: 
      Fn::Sub: API Server for ${RunEnvironment} environment

tags:
  - name: Student
    description: Endpoint for Students
  - name: Recruiter
    description: Endpoint for Recruiters

paths:
  /api/v1/healthz:
    get:
      summary: Ping the API
      operationId: ping

      responses:
        200:
          description: OK

      x-amazon-apigateway-auth:
        type: NONE

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations"

  /api/v1/student/profile:
    get:
      summary: Get student profile.
      operationId: getStudentProfile
      responses:
        200:
          description: OK

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations"

    post:
      summary: Post student profile.
      operationId: postStudentProfile
      responses:
        200:
          description: OK

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations"

  /api/v1/recruiter/view_profile/{username}:
    get:
      summary: Recruiter mode - get student profile.
      operationId: recruiterGetStudentProfile
      responses:
        200:
          description: OK
      
      parameters:
        - name: username
          in: path
          schema:
            type: string
            format: string
          required: true
          description: Username to get profile for

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations"

  /api/v1/student/generate_profile:
    post:
      summary: Student mode - OAI Generate Profile
      operationId: studentGenerateProfile
      responses:
        200:
          description: OK

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}-novpc/invocations"

  /api/v1/student/resume_upload_url:
    post:
      summary: Student mode - get S3 URL to upload resume PDF
      operationId: studentGetS3Url
      responses:
        200:
          description: OK

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations"

  /api/v1/recruiter/search:
    post:
      summary: Recruiter mode - search for profiles with applied filters
      operationId: recruiterSearchProfiles
      responses:
        200:
          description: OK

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations"

  /api/v1/recruiter/mass_download:
    get:
      summary: Recruiter mode - mass download resume PDFs
      operationId: recruiterMassDownloadPDFs
      responses:
        200:
          description: OK

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunctionName}/invocations"
