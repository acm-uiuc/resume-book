openapi: 3.0.3
info:
  title: ACM UIUC Resume Book APi
  version: "1.0.0"
  contact:
    name: ACM Infrastructure Team
    email: infra@acm.illinois.edu

servers:
  - url: api.resumes.acm.illinois.edu

tags:
  - name: Student
    description: Endpoint for Students
  - name: Recruiter
    description: Endpoint for Recruiters

paths:
  /api/v1/healthz:
    get:
      summary: Ping the API
      operationId: ping

      responses:
        200:
          description: OK


      x-amazon-apigateway-auth:
        type: NONE

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:infra-resume-book-api-lambda/invocations

  /api/v1/student/getUploadURL:
    get:
      summary: Get URL for student to upload resume.
      operationId: studentGetUploadURL
      responses:
        200:
          description: OK

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:infra-resume-book-api-lambda/invocations

  /api/v1/recruiter/getResumeListings:
    get:
      summary: Get resume listings based on criteria
      operationId: recruiterGetResumeListings

      responses:
        200:
          description: OK

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-auth:
        type: NONE

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:infra-resume-book-api-lambda/invocations

  /api/v1/recruiter/getResumeUrl:
    get:
      summary: Get resume URL for a specific uid
      operationId: recruiterGetResumeUrl

      responses:
        200:
          description: OK

      security:
        - CombinedAuthorizer: []

      x-amazon-apigateway-auth:
        type: NONE

      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        passthroughBehavior: when_no_match
        httpMethod: POST
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
        uri: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:infra-resume-book-api-lambda/invocations