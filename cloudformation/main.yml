AWSTemplateFormatVersion: 2010-09-09
Description: Resume Book API Lambda
Transform: AWS::Serverless-2016-10-31

Parameters:
  AlertSNSArn:
    Description: SNS Queue to send alarm alerts to
    Type: String
    Default: arn:aws:sns:us-east-1:298118738376:infra-monitor-alerts
  RunEnvironment:
    Type: String
    AllowedValues: [ 'dev', 'prod' ]
  LambdaFunctionName:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$
    Default: infra-resume-book-lambda

  ResumeS3BucketName:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$
    Default: infra-resume-book-pdfs

  ResumeBookApiGWName:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$
    Default: infra-resume-book-api-gw

  AuthLambdaFunctionName:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+$
    Default: infra-resume-book-auth-lambda

Conditions:
  IsProd: !Equals [!Ref RunEnvironment, 'prod']

Mappings:
  ApiGwConfig:
    dev:
      ApiCertificateArn: arn:aws:acm:us-east-1:427040638965:certificate/07a0f957-15ae-4330-be14-25814728b981
      ApiDomainName: resume-api-dev.acm.illinois.edu
      ValidCorsOrigins:
        - "*"
      AadValidClientId: 251efa82-f589-42e1-9ebb-e214a4f40a0f
      KindeValidClientId: 9dfcd7977da347f3ab55fbb909a4d5cf
    prod:
      ApiCertificateArn: arn:aws:acm:us-east-1:298118738376:certificate/4ba7200a-cfc7-4234-b242-0281030df5f5
      ApiDomainName: resume-api.acm.illinois.edu
      ValidCorsOrigins:
        - https://resumes.acm.illinois.edu
      AadValidClientId: 5178a6b1-f46d-40a2-b550-1389b9316446
      KindeValidClientId: fdacad7aea554755844105f5606da0f6
  EnvironmentToCidr:
    dev:
      SecurityGroupIds:
        - sg-00443e61d39721a0d
        - sg-0e99aa1c1e4e9e5b6
      SubnetIds:
        - subnet-0cd2b887e61f6edd8
        - subnet-065857a2bdf3a51aa
        - subnet-09e12f156435e4cc9
    prod:
      SecurityGroupIds:
        - sg-066e3ae1d05e70fcd
      SubnetIds:
        - subnet-0cf33aff80b81eb1b
        - subnet-0cbe89f6ab2665610

Resources:
  ResumeBookIAMRoles:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./iam.yml
      Parameters:
        RunEnvironment: !Ref RunEnvironment
        LambdaFunctionName: !Ref LambdaFunctionName
        ResumeS3BucketName: !Ref ResumeS3BucketName
        AuthLambdaFunctionName: !Ref AuthLambdaFunctionName

  ResumeBookLogGroups:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./logs.yml
      Parameters:
        LambdaFunctionName: !Ref LambdaFunctionName
        AuthLambdaFunctionName: !Ref AuthLambdaFunctionName
        LogRetentionDays: 7

  ResumeBookNoVpcLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../code 
      AutoPublishAlias: live
      Runtime: python3.10
      Description: Resume Book API Lambda - No VPC attachment
      FunctionName: !Sub ${LambdaFunctionName}-novpc
      Handler: app.lambda_handler
      MemorySize: 768
      Role: !GetAtt ResumeBookIAMRoles.Outputs.MainFunctionRoleArn
      Timeout: 30
      Environment:
        Variables:
          RunEnvironment: !Ref RunEnvironment
          ValidCorsOrigins: !Join [",", !FindInMap [ApiGwConfig, !Ref RunEnvironment, ValidCorsOrigins]]
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ResumeBookApiGateway
            Path: /api/v1/student/generate_profile
            Method: ANY

  ResumeBookApiLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../code 
      AutoPublishAlias: live
      Runtime: python3.10
      Description: Resume Book API Lambda
      FunctionName: !Ref LambdaFunctionName
      Handler: app.lambda_handler
      MemorySize: 512
      Role: !GetAtt ResumeBookIAMRoles.Outputs.MainFunctionRoleArn
      Timeout: 60
      Environment:
        Variables:
          RunEnvironment: !Ref RunEnvironment
          ValidCorsOrigins: !Join [",", !FindInMap [ApiGwConfig, !Ref RunEnvironment, ValidCorsOrigins]]
      VpcConfig: 
        Ipv6AllowedForDualStack: True
        SecurityGroupIds: !FindInMap [EnvironmentToCidr, !Ref RunEnvironment, SecurityGroupIds]
        SubnetIds: !FindInMap [EnvironmentToCidr, !Ref RunEnvironment, SubnetIds]
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ResumeBookApiGateway
            Path: /{proxy+}
            Method: ANY
            
  ResumeBookAuthLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../code/authorizers/
      AutoPublishAlias: live
      Runtime: python3.10
      Description: Resume Book Auth Lambda
      FunctionName: !Ref AuthLambdaFunctionName
      Handler: combined.lambda_handler
      MemorySize: 2048
      Role: !GetAtt ResumeBookIAMRoles.Outputs.AuthFunctionRoleArn
      Timeout: 60
      Environment:
        Variables:
          RunEnvironment: !Ref RunEnvironment
          AadValidClientId: !FindInMap [ApiGwConfig, !Ref RunEnvironment, AadValidClientId]
          KindeValidClientId: !FindInMap [ApiGwConfig, !Ref RunEnvironment, KindeValidClientId]
 
# API Gateway
  ResumeBookApiGateway:
    Type: AWS::Serverless::Api
    DependsOn: 
      - ResumeBookApiLambdaFunction
      - ResumeBookNoVpcLambdaFunction
    Properties:
      Name: !Ref ResumeBookApiGWName
      Description: Resume Book API Gateway
      AlwaysDeploy: True
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ../docs/swagger-resume-book.yml
      Auth:
        Authorizers:
          CombinedAuthorizer:
            FunctionArn: !GetAtt ResumeBookAuthLambdaFunction.Arn
      Domain: 
        DomainName: !FindInMap [ApiGwConfig, !Ref RunEnvironment, ApiDomainName]
        CertificateArn: !FindInMap [ApiGwConfig, !Ref RunEnvironment, ApiCertificateArn]
      StageName: default
      Cors:
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date'"
        AllowOrigin: "'*'"
        MaxAge: "'300'"

  APIDefault4XXResponse:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId: !Ref ResumeBookApiGateway
      ResponseType: DEFAULT_4XX
      StatusCode: "404"
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      ResponseTemplates:
        application/json: "{\"error\": true, \"message\": \"Resource not found. Check your URL or contact support.\"}"
  APIAccessDeniedResponse:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId: !Ref ResumeBookApiGateway
      ResponseType: ACCESS_DENIED
      StatusCode: "403"
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      ResponseTemplates:
        application/json: "{\"error\": true, \"message\": \"Access denied. Perhaps reauthenticate and try again?\"}"

  APIUnauthorizedResponse:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      RestApiId: !Ref ResumeBookApiGateway
      ResponseType: UNAUTHORIZED
      StatusCode: "401"
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      ResponseTemplates:
        application/json: "{\"error\": true, \"message\": \"Request could not be authenticated. Perhaps reauthenticate and try again?\"}"

  # ALARMS
  ResumeBookAllLambdasFunctionErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: IsProd
    Properties:
      AlarmName: !Sub '${LambdaFunctionName}-error-alarm'
      AlarmDescription: !Sub 'Alarm if ${LambdaFunctionName} function errors are detected.'
      Namespace: 'AWS/Lambda'
      MetricName: 'Errors'
      Statistic: 'Sum'
      Period: '60'
      EvaluationPeriods: '2'
      ComparisonOperator: 'GreaterThanThreshold'
      Threshold: '0'
      AlarmActions:
        - !Ref AlertSNSArn
      Metrics:
        - Id: main_lambda
          MetricStat:
            Metric:
              Namespace: 'AWS/Lambda'
              MetricName: 'Errors'
              Dimensions:
                - Name: 'FunctionName'
                  Value: !Ref ResumeBookApiLambdaFunction
            Period: 60
            Stat: 'Sum'
          ReturnData: false
        - Id: novpc_lambda
          MetricStat:
            Metric:
              Namespace: 'AWS/Lambda'
              MetricName: 'Errors'
              Dimensions:
                - Name: 'FunctionName'
                  Value: !Sub '${ResumeBookApiLambdaFunction}-novpc'
            Period: 60
            Stat: 'Sum'
          ReturnData: false
        - Id: auth_lambda
          MetricStat:
            Metric:
              Namespace: 'AWS/Lambda'
              MetricName: 'Errors'
              Dimensions:
                - Name: 'FunctionName'
                  Value: !Ref ResumeBookAuthLambdaFunction
            Period: 60
            Stat: 'Sum'
          ReturnData: false
        - Id: totalerrors
          Expression: 'main_lambda + novpc_lambda + auth_lambda'
          Label: 'Total Errors'
          ReturnData: true

  ResumeBookApiGatewayLatencyAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: IsProd
    Properties:
      AlarmName: !Sub '${ResumeBookApiGWName}-latency-alarm'
      AlarmDescription: !Sub 'Alarm if ${ResumeBookApiGWName} API gateway latency is > 3s.'
      Namespace: 'AWS/ApiGateway'
      MetricName: 'Latency'
      Statistic: 'Average'
      Period: '60'
      EvaluationPeriods: '1'
      ComparisonOperator: 'GreaterThanThreshold'
      Threshold: '3000'
      AlarmActions:
        - !Ref AlertSNSArn
      Dimensions:
        - Name: 'ApiName'
          Value: !Ref ResumeBookApiGWName

  ResumeBookApiGateway5XXErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: IsProd
    Properties:
      AlarmName: !Sub '${ResumeBookApiGWName}-5XX-alarm'
      AlarmDescription: !Sub 'Alarm if ${ResumeBookApiGWName} API gateway 5XX errors are detected.'
      Namespace: 'AWS/ApiGateway'
      MetricName: '5XXError'
      Statistic: 'Average'
      Period: '60'
      EvaluationPeriods: '1'
      ComparisonOperator: 'GreaterThanThreshold'
      Threshold: '2'
      AlarmActions:
        - !Ref AlertSNSArn
      Dimensions:
        - Name: 'ApiName'
          Value: !Ref ResumeBookApiGWName

  LambdaAuthorizerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ResumeBookAuthLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ResumeBookApiGateway}/authorizers/*"

  APILambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - ResumeBookApiLambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref ResumeBookApiGateway
          - "/*/*/*"

  APILambdaNoVpcPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - ResumeBookNoVpcLambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref ResumeBookApiGateway
          - "/*/*/*"

  # S3 Bucket
  ResumeStorageS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ResumeS3BucketName}-${RunEnvironment}"
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedOrigins: !FindInMap [ApiGwConfig, !Ref RunEnvironment, ValidCorsOrigins]
            AllowedMethods:
              - GET
              - PUT
            Id: CORSAllowProdSite
            MaxAge: 3600

Outputs:
  ApiUrl:
    Value: !Sub
      - https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com/default
      - ApiId: !Ref ResumeBookApiGateway
